# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# color config
set $bg-color            #0086b7
set $bg-color-highlight  #deffcc
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935

# window colors
 #                       border              background         text                 indicator
 client.focused          $bg-color-highlight $bg-color          $text-color          #00ff00
 client.unfocused        $inactive-bg-color  $inactive-bg-color $inactive-text-color #00ff00
 client.focused_inactive $inactive-bg-color  $inactive-bg-color $inactive-text-color #00ff00
 client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          #00ff00

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango: System San Francisco Display 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Function keys to open common apps.
bindsym F5 exec ~/email.sh
bindsym F6 exec i3-sensible-terminal
bindsym F7 exec google-chrome
bindsym F8 exec emacsclient -c -e '(spacemacs/switch-to-scratch-buffer)'

# kill focused window
bindsym $mod+Shift+q kill

# Setup borders
hide_edge_borders both

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus: customized to mimic vim movement
bindsym $mod+j focus right
bindsym $mod+k focus left
bindsym $mod+l focus down
bindsym $mod+h focus up

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move right 20 px
bindsym $mod+Shift+k move left 20 px
bindsym $mod+Shift+l move down 20 px
bindsym $mod+Shift+h move up 20 px

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+bar split h

# split in vertical orientation
bindsym $mod+v split v

# Move to the other workspace
bindsym $mod+o move workspace to output left

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Leave fullscreen on encountering popups
popup_during_fullscreen leave_fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make this window a tabbed container
bindsym $mod+t split v; layout tabbed; \
    exec "notify-send 'This is now a tabbed container.' --expire-time=2000"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# sticky window
bindsym $mod+Shift+s sticky toggle

# focus the child container
#bindsym $mod+d focus child

# lock machine
bindsym $mod+x exec "~/dotfiles/utils/lock.sh"
# lock automatically after inactivity
exec xautolock -time 4 -locker "~/dotfiles/utils/lock.sh" &
# notify user of auto-lock
exec "~/dotfiles/utils/idle_notification.py"

# suspend
bindsym $mod+Shift+x exec i3lock --color 475263 && dbus-send --system --dest=org.freedesktop.UPower --type=method_call --print-reply /org/freedesktop/UPower org.freedesktop.UPower.Suspend

# mouse bindings
# toggle floating with right click
bindsym button3 floating toggle
# middle click to kill window
bindsym button2 kill

# start rofi (a program launcher)
# search desktop entries
bindsym F2 exec --no-startup-id i3-dmenu-desktop --dmenu='rofi -dmenu -i'
# switch and kill windows
bindsym $mod+Return exec --no-startup-id python3 ~/dotfiles/utils/i3-container-commander.py \
    --menu=rofi --group-by=none -- -i
bindsym $mod+Shift+Return exec --no-startup-id python3 ~/dotfiles/utils/i3-container-commander.py \
    --menu=rofi --group-by=none --command=kill -- -i

# TODO: The color scheme for rofi is a work in ugly progress.
bindsym F4 exec rofi -show run -lines 5 -eh 2 -width 50 -padding 200 \
-opacity "90" -color.enabled \
-color-window "$bg-color" "$bg-color" "$text-color" "$bg-color" "#9575cd" \
-bw 2 -bc "$bg-color" -bg "$bg-color" -fg "$text-color" -hlbg "$bg-color" \
-hlfg "#9575cd" || dmenu_run


# workspace names
set $ws1 "1 P1"
set $ws2 "2 P1"
set $ws3 "3 P2"
set $ws4 "4 P2"
set $ws8 "8 TP"
set $ws9 "9 Comms"
set $ws10 "0 Agenda"
# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# enable workspace auto back-and-forth
# ie press the 'move to workspace' shortcut again
# to return to the original workspace.
workspace_auto_back_and_forth yes

# move to scratchpad
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+Shift+apostrophe move scratchpad

# show terminal scratchpad window
bindsym $mod+minus scratchpad show
# show chrome scratchpad window
bindsym $mod+apostrophe workspace back_and_forth

# This binding never works because the system binds it to some other action
# before it even reaches i3. Not sure what that binding is.
# bindsym $mod+backslash [class="Gnome-terminal"] scratchpad show

# assign spotify to workspace 10
assign [class="Spotify"] $ws10
# spotify does not assign a class at startup, workaround:
for_window [class="Spotify"] move to workspace $ws10

for_window [title="Nexus 6P"] floating enable

# Float google-chrome windows
# for_window [class="Google-chrome"] floating enable

# Set max float size
floating_maximum_size 1600 x 1400

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "$HOME/dotfiles/utils/power_menu"

# passthrough mode (pass through i3 keybindings).
mode "passthrough" {
  bindsym Escape mode "default"
}

bindsym $mod+p mode "passthrough"

# resize window (you can also use the mouse for that)
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode

  # Pressing left will shrink the window’s width.
  # Pressing right will grow the window’s width.
  # Pressing up will shrink the window’s height.
  # Pressing down will grow the window’s height.
  bindsym j resize grow width 10 px or 10 ppt
  bindsym k resize shrink width 10 px or 10 ppt
  bindsym l resize grow height 10 px or 10 ppt
  bindsym h resize shrink height 10 px or 10 ppt

  # same bindings, but for the arrow keys
  bindsym Left resize shrink width 10 px or 10 ppt
  bindsym Down resize grow height 10 px or 10 ppt
  bindsym Up resize shrink height 10 px or 10 ppt
  bindsym Right resize grow width 10 px or 10 ppt

  # blow up window (for floating windows)
  bindsym b resize set 1600 1400; move absolute position center

  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

mode "mouse" {

    set $slow 5
    set $quick 100
    set $fast 200

    # Mouse movement (slow/fine-tuned) -- vim keybindings

    bindsym Shift+h exec xdotool mousemove_relative -- -$slow 0
    bindsym Shift+j exec xdotool mousemove_relative 0 $slow
    bindsym Shift+k exec xdotool mousemove_relative -- 0 -$slow
    bindsym Shift+l exec xdotool mousemove_relative $slow 0

    # Mouse movement (slow/fine-tuned) -- arrow keys

    bindsym Shift+Left exec xdotool mousemove_relative -- -$slow 0
    bindsym Shift+Down exec xdotool mousemove_relative 0 $slow
    bindsym Shift+Up exec xdotool mousemove_relative -- 0 -$slow
    bindsym Shift+Right exec xdotool mousemove_relative $slow 0

    # Mouse movement (quicker) -- vim keybindings

    bindsym h exec xdotool mousemove_relative -- -$quick 0
    bindsym j exec xdotool mousemove_relative 0 $quick
    bindsym k exec xdotool mousemove_relative -- 0 -$quick
    bindsym l exec xdotool mousemove_relative $quick 0

    # Mouse movement (quicker) -- arrow keys

    bindsym Left exec xdotool mousemove_relative -- -$quick 0
    bindsym Down exec xdotool mousemove_relative 0 $quick
    bindsym Up exec xdotool mousemove_relative -- 0 -$quick
    bindsym Right exec xdotool mousemove_relative $quick 0

    # Mouse movement (fast) -- vim keybindings

    bindsym Control+h exec xdotool mousemove_relative -- -$fast 0
    bindsym Control+j exec xdotool mousemove_relative 0 $fast
    bindsym Control+k exec xdotool mousemove_relative -- 0 -$fast
    bindsym Control+l exec xdotool mousemove_relative $fast 0

    # Mouse movement (fast) -- arrow keys

    bindsym Control+Left exec xdotool mousemove_relative -- -$fast 0
    bindsym Control+Down exec xdotool mousemove_relative 0 $fast
    bindsym Control+Up exec xdotool mousemove_relative -- 0 -$fast
    bindsym Control+Right exec xdotool mousemove_relative $fast 0

    # Left Click
    bindsym f exec xdotool click 1

    # Middle Click
    bindsym d exec xdotool click 2

    # Right Click
    bindsym s exec xdotool click 3

    # Left Click-and-drag
    bindsym Shift+f exec xdotool mousedown 1

    # Middle Click-and-drag
    bindsym Shift+d exec xdotool mousedown 2

    # Right Click-and-drag
    bindsym Shift+s exec xdotool mousedown 3

    # Left Drag release
    bindsym Control+f exec xdotool mouseup 1

    # Middle Drag release
    bindsym Control+d exec xdotool mouseup 2

    # Right Drag release
    bindsym Control+s exec xdotool mouseup 3


    # return to normal keybindings -- IMPORTANT!!

    bindsym Escape mode "default"
}

bindsym $mod+m mode "mouse"



# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  font pango: Cousine for Powerline 10
  status_command i3blocks || i3status
  #tray_output primary
  colors {
		background $inactive-bg-color
	  separator #757575
		#                  border              background         text
		focused_workspace  $bg-color-highlight $bg-color          $text-color
		inactive_workspace $inactive-bg-color  $inactive-bg-color $inactive-text-color
		urgent_workspace   $urgent-bg-color    $urgent-bg-color   $text-color
  }
  position top
}

# Add keybindings for media and special function keys.
# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id ~/dotfiles/utils/volume up 5%
bindsym XF86AudioLowerVolume exec --no-startup-id ~/dotfiles/utils/volume down 5%
bindsym XF86AudioMute exec --no-startup-id ~/dotfiles/utils/volume mute

# Screen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness

# Touchpad controls
# bindsym XF86TouchpadToggle exec /some/path/toggletouchpad.sh # toggle touchpad

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym F10 exec playerctl previous
bindsym F11 exec playerctl play-pause
bindsym F12 exec playerctl next

# No borders or title bars.
new_window pixel 10

# Run startup programs
exec --no-startup-id ~/startup.sh

# Machine specific commands
exec --no-startup-id ~/startup.local.sh

# Start gnome terminal and move it to scratchpad
exec --no-startup-id gnome-terminal --role scratchpad
for_window [window_role="scratchpad"] move scratchpad; resize set 1600 1400

# load emails.
exec --no-startup-id ~/load_mails.sh &

# For now disable i3utils.
# exec_always --no-startup-id python ~/dotfiles/utils/i3utils.py
