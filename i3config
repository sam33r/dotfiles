# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# color config
set $bg-color            #0086b7
set $bg-color-highlight  #0086b7
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935

# window colors
 #                       border              background         text                 indicator
 client.focused          $bg-color-highlight $bg-color          $text-color          #0086b7
 client.unfocused        $inactive-bg-color  $inactive-bg-color $inactive-text-color #0086b7
 client.focused_inactive $inactive-bg-color  $inactive-bg-color $inactive-text-color #0086b7
 client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          #0086b7

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango: System San Francisco Display 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Function keys to open common apps.
# search desktop entries
# bindsym F2 exec --no-startup-id i3-dmenu-desktop --dmenu='rofi -dmenu -i'

bindsym $mod+2 exec emacsclient -c -e '(mu4e-compose-new)'
bindsym $mod+3 exec --no-startup-id "~/dotfiles/utils/search_mail.sh"
bindsym $mod+4 exec --no-startup-id "~/dotfiles/utils/add_journal.sh"
bindsym $mod+5 exec --no-startup-id "~/dotfiles/utils/add_task.sh"
bindsym $mod+6 exec gnome-terminal
bindsym $mod+Shift+6 exec gnome-terminal -e "bash"
bindsym $mod+7 exec google-chrome
bindsym $mod+8 exec emacsclient -c -e '(spacemacs/switch-to-scratch-buffer)' --alternate-editor=""

# Setup borders
hide_edge_borders both

# change focus: customized to mimic vim movement
bindsym $mod+j focus right
bindsym $mod+k focus left
bindsym $mod+l focus down
bindsym $mod+h focus up

# split in horizontal orientation
bindsym $mod+bar split h; \
    exec "notify-send 'Split horizontally' --expire-time=2000"

# split in vertical orientation
bindsym $mod+v split v; \
    exec "notify-send 'Split vertically' --expire-time=2000"

# Move to the other workspace
bindsym $mod+o move workspace to output left

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Make current container a centered, floating column.
bindsym $mod+c floating enable; resize set 1000 1900; move position center

# List/edit keybindings
bindsym $mod+slash exec "$HOME/dotfiles/utils/i3_keybindings.sh"


# "mod+Shift" Shortcuts
# ---------------------

# Window Related

# move focused window
bindsym $mod+Shift+j move right 200 px
bindsym $mod+Shift+k move left 200 px
bindsym $mod+Shift+l move down 200 px
bindsym $mod+Shift+h move up 200 px

# kill focused window
bindsym $mod+Shift+q kill

# Modals

# Enter focused mode for current container.
bindsym $mod+Shift+f exec "$HOME/dotfiles/utils/focus.sh"
# Type snippet
bindsym $mod+Shift+t exec "$HOME/dotfiles/utils/snippets.py"
# Select working mode
bindsym $mod+Shift+m exec "$HOME/dotfiles/utils/projects.sh"
# Clipboard manager
bindsym $mod+Shift+c exec "copyq toggle"

# Misc

# Cycle wallpaper
bindsym $mod+Shift+w exec "feh --randomize --bg-fill ~/Wallpapers/* &"

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking; \
    exec "notify-send 'Enabled stacked layout' --expire-time=2000"
bindsym $mod+w layout tabbed; \
    exec "notify-send 'Enabled tabbed layout' --expire-time=2000"
bindsym $mod+e layout toggle split; \
    exec "notify-send 'Enabled split  layout' --expire-time=2000"

# Make this window a tabbed container
bindsym $mod+t split v; layout tabbed; \
    exec "notify-send 'This is now a tabbed container.' --expire-time=2000"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# shortcut for picture-in-picture
# Float, resize, reposition and make sticky.
bindsym $mod+i floating enable; resize set 900 600; move absolute position 1500 px 900 px; sticky enable

# focus the parent container
bindsym $mod+a focus parent

# sticky window
bindsym $mod+Shift+s sticky toggle

# focus the child container
bindsym $mod+d focus child

# focus the alerted window
bindsym $mod+y [urgent=latest] focus

# lock machine
bindsym $mod+x exec "~/dotfiles/utils/lock.sh"
# lock automatically after inactivity
exec xautolock -time 4 -locker "~/dotfiles/utils/lock.sh" &
# notify user of auto-lock
exec "~/dotfiles/utils/idle_notification.py"

# suspend
bindsym $mod+Shift+x exec i3lock --color 475263 && dbus-send --system --dest=org.freedesktop.UPower --type=method_call --print-reply /org/freedesktop/UPower org.freedesktop.UPower.Suspend

# mouse bindings
# toggle floating with right click
bindsym button3 floating toggle
# middle click to kill window
bindsym button2 kill

# start rofi (a program launcher)
# switch and kill windows
bindsym $mod+Return exec --no-startup-id "rofi -combi-modi window,drun -show combi -modi combi"

# Shortcut to name a workspace.
bindsym $mod+n exec i3-input -F 'rename workspace to %s' -P 'New name: '

# Workspace 6 is where windows go to die.
bindsym $mod+Shift+1 move to workspace 6

# Workspace 8 is special - float everything in that ws.
for_window [workspace="8"] floating enable

for_window [class="copyq"] floating enable
for_window [class="copyq"] resize set 1000 1000
for_window [class="copyq"] move position center

for_window [title="Signal" class="Google-chrome"] floating enable

for_window [class="Gvim"] floating enable
for_window [class="Gvim"] move position center

# move to scratchpad
bindsym $mod+Shift+minus move scratchpad

# show scratchpad windows
bindsym $mod+minus [class="Gnome-terminal"] scratchpad show
bindsym $mod+0 [class="Google-chrome"] scratchpad show
bindsym $mod+apostrophe scratchpad show

# Set max float size
floating_maximum_size 1600 x 1400

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "$HOME/dotfiles/utils/power_menu"

# passthrough mode (pass through i3 keybindings).
mode "passthrough" {
  bindsym Escape mode "default"
}

bindsym $mod+p mode "passthrough"

# resize window (you can also use the mouse for that)
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode

  # Pressing down will grow the window’s height.
  bindsym j resize grow width 10 px or 10 ppt
  bindsym k resize shrink width 10 px or 10 ppt
  bindsym l resize grow height 10 px or 10 ppt
  bindsym h resize shrink height 10 px or 10 ppt

  bindsym Shift+j resize grow width 150 px or 150 ppt
  bindsym Shift+k resize shrink width 150 px or 150 ppt
  bindsym Shift+l resize grow height 150 px or 150 ppt
  bindsym Shift+h resize shrink height 150 px or 150 ppt

  # blow up window (for floating windows)
  bindsym b resize set 1600 1400; move absolute position center

  # resize to a standard column
  bindsym c floating enable; resize set 1000 1900; move position center

  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

mode "mouse" {

    set $slow 5
    set $quick 100
    set $fast 200

    # Mouse movement (slow/fine-tuned) -- vim keybindings

    bindsym Shift+h exec xdotool mousemove_relative -- -$slow 0
    bindsym Shift+j exec xdotool mousemove_relative 0 $slow
    bindsym Shift+k exec xdotool mousemove_relative -- 0 -$slow
    bindsym Shift+l exec xdotool mousemove_relative $slow 0

    # Mouse movement (quicker) -- vim keybindings

    bindsym h exec xdotool mousemove_relative -- -$quick 0
    bindsym j exec xdotool mousemove_relative 0 $quick
    bindsym k exec xdotool mousemove_relative -- 0 -$quick
    bindsym l exec xdotool mousemove_relative $quick 0

    # Mouse movement (fast) -- vim keybindings

    bindsym Control+h exec xdotool mousemove_relative -- -$fast 0
    bindsym Control+j exec xdotool mousemove_relative 0 $fast
    bindsym Control+k exec xdotool mousemove_relative -- 0 -$fast
    bindsym Control+l exec xdotool mousemove_relative $fast 0

    # Left Click
    bindsym f exec xdotool click 1

    # Middle Click
    bindsym d exec xdotool click 2

    # Right Click
    bindsym s exec xdotool click 3

    # Left Click-and-drag
    bindsym Shift+f exec xdotool mousedown 1

    # Middle Click-and-drag
    bindsym Shift+d exec xdotool mousedown 2

    # Right Click-and-drag
    bindsym Shift+s exec xdotool mousedown 3

    # Left Drag release
    bindsym Control+f exec xdotool mouseup 1

    # Middle Drag release
    bindsym Control+d exec xdotool mouseup 2

    # Right Drag release
    bindsym Control+s exec xdotool mouseup 3

    # return to normal keybindings -- IMPORTANT!!
    bindsym Escape mode "default"
}

bindsym $mod+m mode "mouse"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  font pango: Cousine for Powerline 10
  status_command i3blocks || i3status
  #tray_output primary
  colors {
		background $inactive-bg-color
	  separator #757575
		#                  border              background         text
		focused_workspace  $bg-color-highlight $bg-color          $text-color
		inactive_workspace $inactive-bg-color  $inactive-bg-color $inactive-text-color
		urgent_workspace   $urgent-bg-color    $urgent-bg-color   $text-color
  }
  position bottom
  mode hide
  modifier Control
  workspace_buttons no
  binding_mode_indicator yes
}

# Add keybindings for media and special function keys.
# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id ~/dotfiles/utils/volume up 5%
bindsym XF86AudioLowerVolume exec --no-startup-id ~/dotfiles/utils/volume down 5%
bindsym XF86AudioMute exec --no-startup-id ~/dotfiles/utils/volume mute

# Screen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness

# Touchpad controls
# bindsym XF86TouchpadToggle exec /some/path/toggletouchpad.sh # toggle touchpad

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Leave fullscreen on encountering popups
popup_during_fullscreen leave_fullscreen

# No title bars.
new_window pixel 2

# Run startup programs
exec --no-startup-id ~/startup.sh

# Machine specific commands
exec --no-startup-id ~/startup.local.sh

# Start gnome terminal and move it to scratchpad
exec --no-startup-id gnome-terminal --role scratchpad
for_window [window_role="scratchpad"] move scratchpad; resize set 1600 1400

# load emails.
exec --no-startup-id ~/load_mails.sh &

# Run small i3 customizations.
exec_always --no-startup-id ~/py3env/bin/python3 ~/dotfiles/utils/i3utils.py

# i3gaps settings.
# gaps inner 15
# gaps outer 0
